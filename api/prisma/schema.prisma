// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider          = "postgres"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Servers {
  id                              Int       @id @default(autoincrement())
  server_id                       String    @unique
  stack_id                        String
  last_update_id                  Int?
  stack_region                    String
  stack_environment               String
  stack_logo                      String
  stack_app_url                   String
  stack_logs_url                  String
  server_name                     String
  server_role                     String
  server_public_ip                String
  server_app_version              String
  server_xapi_version             String
  server_disk_used_gb             Int
  server_disk_total_gb            Int
  server_key_file_name            String
  server_availability_zone        String
  server_type                     String
  server_health_updated_at        DateTime
  server_health_code              Int
  server_health_message           String
  server_update_progress          Int?
  server_update_stage             String?
  server_update_message           String?
  server_app_updating_to_version  String?
  server_xapi_updating_to_version String?
  server_is_chosen_one            Boolean?
  server_created_at               DateTime  @default(now())
  server_updated_at               DateTime?
  lastUpdateId                    Updates?  @relation(fields: [last_update_id], references: [id])
}

model Updates {
  id                           Int       @id @default(autoincrement())
  update_requested_by          String?
  last_update_id               Int?      @unique
  stack_id                     String
  servers                      String[]
  servers_ready_to_switch      String[]
  servers_finished             String[]
  server_count                 Int
  server_ready_to_switch_count Int
  server_finished_count        Int
  is_cancelled                 Boolean
  run_migrations               Boolean
  rollback_migrations          Boolean
  update_app_to                String
  update_xapi_to               String
  chosen_one                   String
  switch_code_at_date          Int
  created_at                   DateTime  @default(now())
  lastUpdateId                 Updates?  @relation("UpdatesToUpdates", fields: [last_update_id], references: [id])
  nextUpdateId                 Updates[] @relation("UpdatesToUpdates")
  serversWithThisUpdate        Servers[]
}
